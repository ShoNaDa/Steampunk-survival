go.property("lvl", 0)
go.property("count", 0)
go.property("cooldown", 0)

local SHOOT_OFFHAND = hash("shoot_offhand")
local UP_LVL = hash("up_lvl")

local id_timer = nil
local count_bullet = -1

local function shoot_offhand(self, cooldown, count)
	timer.delay(cooldown, false, function()
		count_bullet = 1
		
		id_timer = timer.delay(0.2, true, function()
			local rotation = go.get_rotation("/hero/hero")
			local position = go.get_position("/hero/hero") + vmath.rotate(rotation, vmath.vector3(5, -10, 0))
			local to = position + vmath.rotate(rotation, vmath.vector3(0, 1000, 0))
			local props = { rot = rotation, pos = position, to_b = to, damage = damage }

			msg.post("/hero/bullet_go#bullet", "shoot", props) 

			count_bullet = count_bullet + 1
		end)

		msg.post(".", "shoot_offhand")
	end)
end

function update(self, dt)
	if (count_bullet == self.count) then
		timer.cancel(id_timer)
	end
end

function on_message(self, message_id, message, sender)
	if message_id == SHOOT_OFFHAND then
		--shoot 2 bullet
		if (self.lvl == 1) then
			self.cooldown = 5
			self.count = 2
		elseif (self.lvl == 2) then
		elseif (self.lvl == 3) then
		elseif (self.lvl == 4) then
		elseif (self.lvl == 5) then
			--tut nihua nebude 
		end

		shoot_offhand(self, self.cooldown, self,count)
	end

	if message_id == UP_LVL then
		self.lvl = self.lvl + 1

		if self.lvl == 1 then
			msg.post(".", "shoot_offhand")
		end
	end
end