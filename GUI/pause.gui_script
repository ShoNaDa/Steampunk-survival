local PAUSE = hash("pause")
local RIGHT = hash("right")
local PROXY_LOADED = hash("proxy_loaded")
local PAUSED = hash("paused")
local UNPAUSED = hash("unpaused")
local HIDE = hash("hide")
local UNHIDE = hash("unhide")

function init(self)
	msg.post("/proxy#game_proxy", "acquire_input_focus")
	msg.post("/proxy#game_proxy", "load")
	
	self.paused = false
	self.pause_node = gui.get_node("pause")
	self.pause_text = gui.get_node("paused")
end

local function set_pause(self)
	--game on pause, then the animation of the pause text
	gui.play_flipbook(self.pause_node, RIGHT)
	msg.post("/proxy#game_proxy", "set_time_step", {factor = 0, mode = 1})
	gui.set_visible(self.pause_text, true)
	gui.animate(self.pause_text, gui.PROP_SCALE, gui.get_scale(self.pause_text) * 2, gui.EASING_OUTQUAD, 0.3)
end

local function set_unpause(self)
	--animate text, then game right
	gui.animate(self.pause_text, gui.PROP_SCALE, gui.get_scale(self.pause_text) / 2, gui.EASING_OUTQUAD, 0.3)
	timer.delay(0.3, false, function() 
		gui.set_visible(self.pause_text, false) 
		gui.play_flipbook(self.pause_node, PAUSE)
		msg.post("/proxy#game_proxy", "set_time_step", {factor = 1, mode = 1})
	end)
end

local function set_hide(self, hide_status)
	gui.set_enabled(self.pause_node, hide_status)
	gui.set_enabled(self.pause_text, hide_status)
end

function on_message(self, message_id, message, sender)
	if message_id == PROXY_LOADED then
		msg.post(sender, "enable")
	end

	if message_id == PAUSED then
		set_pause(self)
	elseif message_id == UNPAUSED then
		set_unpause(self)
	end

	if message_id == HIDE then
		set_hide(self, false)
	elseif message_id == UNHIDE then
		set_hide(self, true)
	end
end

function on_input(self, action_id, action)
	if action.released and (gui.pick_node(self.pause_node, action.x, action.y) or action_id == PAUSE) then
		self.paused = not self.paused
		
		if self.paused then
			set_pause(self)
		else
			set_unpause(self)
		end
	end
end