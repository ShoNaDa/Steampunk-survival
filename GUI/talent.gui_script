local LVL_UP = hash("lvl_up")

local hp, speed, damage = 0
local lvl_ability = 3

function init(self)
	msg.post(".", "acquire_input_focus")

	self.helth_node = gui.get_node("helth_box")
	self.speed_node = gui.get_node("speed_box")
	self.damage_node = gui.get_node("damage_box")

	self.all_enabled = false
end

local function hp_calc(self, _hp)
	_hp = _hp * 2
	return _hp
end

local function speed_calc(self, _speed)
	_speed = _speed * 2
	return _speed
end

local function damage_calc(self, _damage)
	_damage = _damage * 2
	return _damage
end

local function set_characts_hero(self, _hp, _speed, _damage, _pick_node)
	--send new characts hero
	local new_charact = { new_hp = _hp, new_speed = _speed, new_damage = _damage }
	msg.post("default:/hero/hero", "get_new_charact", { new_characts = new_charact })

	--new color on picked node
	local old_color = gui.get_color(_pick_node)
	gui.set_color(_pick_node, vmath.vector4(0.5, 0.5, 0.5, 1))
	
	--disable all nodes
	timer.delay(1, false,  function()
		gui.set_enabled(gui.get_node("all"), false)
		msg.post("/GUI#pause", "unpaused")

		msg.post("/GUI#pause", "unhide")
		msg.post("/GUI#active_abilities", "unhide")

		--old color
		gui.set_color(_pick_node, old_color)
	end)
end

function on_message(self, message_id, message, sender)
	if message_id == LVL_UP then
		--show characteristic message
		if message.characts.lvl % lvl_ability ~= 0 then
			msg.post("/GUI#pause", "paused")
			gui.set_enabled(gui.get_node("all"), true)

			msg.post("/GUI#pause", "hide")
			msg.post("/GUI#active_abilities", "hide")

			--set all characts
			hp = message.characts.hp
			speed = message.characts.speed
			damage = message.characts.damage

			--set GUI
			gui.set_text(gui.get_node("next_lvl"), "New lvl")
			gui.set_text(gui.get_node("hp"), "Hp: " .. hp .. " => " .. hp_calc(self, hp))
			gui.set_text(gui.get_node("speed"), "Speed: " .. speed .. " => " .. speed_calc(self, speed))
			gui.set_text(gui.get_node("damage"), "Damage: " .. damage .. " => " .. damage_calc(self, damage))
			
			timer.delay(0.5, false, function()
				self.all_enabled = true
			end)
		--show ability message
		else
			msg.post("/GUI#ability", "choose_ability")
		end
	end
end

function on_input(self, action_id, action)
	if (self.all_enabled == true) then
		--if select helth talent
		if action.pressed and (gui.pick_node(self.helth_node, action.x, action.y)) then
			hp = hp_calc(self, hp)
			set_characts_hero(self, hp, speed, damage, self.helth_node)
			self.all_enabled = false
		--if select speed talent
		elseif action.pressed and (gui.pick_node(self.speed_node, action.x, action.y)) then
			speed = speed_calc(self, speed)		
			set_characts_hero(self, hp, speed, damage, self.speed_node)
			self.all_enabled = false
		--if select damage talent
		elseif action.pressed and (gui.pick_node(self.damage_node, action.x, action.y)) then
			damage = damage_calc(self, damage)		
			set_characts_hero(self, hp, speed, damage, self.damage_node)
			self.all_enabled = false
		end
	end
end